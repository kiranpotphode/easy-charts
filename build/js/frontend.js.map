{"version":3,"file":"js/frontend.js","mappings":"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","sources":["webpack://easy-charts/./node_modules/chartjs-plugin-stacked100/build/index.js","webpack://easy-charts/webpack/bootstrap","webpack://easy-charts/webpack/runtime/compat get default export","webpack://easy-charts/webpack/runtime/define property getters","webpack://easy-charts/webpack/runtime/hasOwnProperty shorthand","webpack://easy-charts/./node_modules/@kurkle/color/dist/color.esm.js","webpack://easy-charts/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://easy-charts/./node_modules/chart.js/dist/chart.js","webpack://easy-charts/./node_modules/chart.js/auto/auto.js","webpack://easy-charts/./node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","webpack://easy-charts/./src/js/chart-js-adapter/helpers.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-squrt-scale.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-symlog-scale.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-pow-scale.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-canvas-background.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-plot-area-background.js","webpack://easy-charts/./src/js/chart-js-adapter/plugin-download-chart-image.js","webpack://easy-charts/./src/js/chart-js-adapter.js","webpack://easy-charts/./src/js/easy-charts-public.js"],"sourcesContent":["!function(t,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define([],n):\"object\"==typeof exports?exports.ChartjsPluginStacked100=n():t.ChartjsPluginStacked100=n()}(self,(()=>(()=>{\"use strict\";var t={d:(n,a)=>{for(var r in a)t.o(a,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:a[r]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},n={};t.r(n),t.d(n,{default:()=>g});var a=function(t,n,a){if(a||2===arguments.length)for(var r,e=0,o=n.length;e<o;e++)!r&&e in n||(r||(r=Array.prototype.slice.call(n,0,e)),r[e]=n[e]);return t.concat(r||Array.prototype.slice.call(n))},r=function(t){return\"object\"===typeof t&&!!t},e=function(t,n,a){if(r(t)){var e=function(t,n){return t&&t[\"\".concat(n,\"AxisKey\")]||n}(a,n?\"x\":\"y\");return t[e]}return t},o=function(t){t.originalData=t.datasets.map((function(t){return n=t.data,a([],n,!0);var n}))},i=function(t,n){var a=Math.pow(10,n);return Math.round(100*t*a)/a},c=function(t,n){var a=Math.pow(10,n);return Math.floor(100*t*a)/a},u=function(t,n){var a=Math.pow(10,n);return Math.ceil(100*t*a)/a},f=function(){return f=Object.assign||function(t){for(var n,a=1,r=arguments.length;a<r;a++)for(var e in n=arguments[a])Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e]);return t},f.apply(this,arguments)},l=function(t,n,a){if(a||2===arguments.length)for(var r,e=0,o=n.length;e<o;e++)!r&&e in n||(r||(r=Array.prototype.slice.call(n,0,e)),r[e]=n[e]);return t.concat(r||Array.prototype.slice.call(n))},s=Symbol(),d=function(t,n,a,e,o){if(!r(n))return o;var i=a&&a[\"\".concat(e?\"y\":\"x\",\"AxisKey\")];if(!i)return o;var c=n[i];if(!c)return o;var u=t.findIndex((function(t){return t===c}));return u<0?o:u},p=function(t,n){return!n||(t.xAxisID||t.yAxisID)===n},v=function(t,n,a,r,o,f,v,y){void 0===f&&(f=\"off\");var b=function(t,n,a,r,o,i){var c,u=t.labels,f=t.datasets,v=u.length,y=null===(c=null==f?void 0:f[0])||void 0===c?void 0:c.stack,b=l([],new Array(v),!0).map((function(t,c){return f.filter((function(t){return p(t,o)})).reduce((function(t,o,f){var l=o.parsing||i,p=o.stack||s,v=o.data.find((function(t,n){return d(u,t,l,a,n)==c}));t[p]||(t[p]=0);var b=Math.abs(e(v,a,l)||0)*n[f];return r&&!y?t[p]<b&&(t[p]=b):t[p]+=b,t}),{})}));return y&&r?b.map((function(t){var n=Math.max.apply(Math,Object.values(t));return Object.keys(t).forEach((function(a){return t[a]=n})),t})):b}(t,n,a,o,v,y),h=\"off\"===f?i:\"down\"===f?c:u;return t.datasets.map((function(n){var o=p(n,v),i=new Array(t.labels.length);return n.data.forEach((function(c,u){var f=n.parsing||y,l=e(c,a,f),p=d(t.labels,c,f,a,u);if(o){var v=n.stack||s,g=b[p][v];i[p]=l&&g?h(l/g,r):0}else i[p]=l})),i}))},y=function(t,n){t&&t.forEach((function(t,a){n[a].data=t}))},b=function(t){return\"y\"===t.options.indexAxis},h=function(t,n,a,r){var e=f(f({stacked:a},r),t.options.scales[n]);t.options.scales[n]=e};const g={id:\"stacked100\",beforeInit:function(t,n,a){if(a.enable){var r=a.replaceTooltipLabel,o=void 0===r||r,i=a.fixNegativeScale,c=void 0===i||i,u=a.individual,l=void 0!==u&&u,s=b(t),v=s?\"x\":\"y\",y=function(t,n){var a={max:100};return t?n?f({min:-100},a):a:f({min:0},a)}(t.data.datasets.some((function(n){return n.data.some((function(a){return(e(a,s,n.parsing||t.options.parsing)||0)<0}))})),c);a.axisId?h(t,a.axisId,!l,y):[\"x\",\"y\"].forEach((function(n){h(t,n,!l,n===v?y:{})})),o&&(t.options.plugins.tooltip.callbacks.label=function(t,n){return function(a){var r=a.chart.data,o=a.datasetIndex,i=a.dataIndex,c=r.datasets[o].label||\"\",u=r.datasets[o].parsing||a.chart.options.parsing,f=r.originalData[o].find((function(n,a){return d(r.labels,n,u,t,a)==i})),l=r.calculatedData[o][i],s=e(f,t,u);return p(r.datasets[o],n)?\"\".concat(c,\": \").concat(l,\"% (\").concat(s,\")\"):\"\".concat(c,\": \").concat(l)}}(s,a.axisId))}},beforeUpdate:function(t,n,a){if(a.enable){var r=t.data;o(r);var e=r.datasets.map((function(n,a){var r,e;return(null!==(e=null===(r=t.getDatasetMeta(a))||void 0===r?void 0:r.hidden)&&void 0!==e?e:n.hidden)?0:1})),i=function(t){if(!(\"precision\"in t))return 1;if(\"number\"!=typeof t.precision)return 1;var n=Math.floor(t.precision);return n<0||n>16?1:n}(a);r.calculatedData=v(r,e,b(t),i,a.individual,a.roundOption,a.axisId,t.options.parsing),y(r.calculatedData,r.datasets)}},afterUpdate:function(t,n,a){if(a.enable){var r=t.data;y(r.originalData,r.datasets)}}};return n})()));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","export const chartJSColorPalette = {\n\tDefault: [\n\t\t'#00BBC9',\n\t\t'#EC63AB',\n\t\t'#AA8AE4',\n\t\t'#83CE44',\n\t\t'#ff8f25',\n\t\t'#009EAA',\n\t\t'#CA4F7F',\n\t\t'#9C70C0',\n\t\t'#6BAF3B',\n\t],\n\tOldDefault: [\n\t\t'#7E6DA1',\n\t\t'#C2CF30',\n\t\t'#FF8900',\n\t\t'#FE2600',\n\t\t'#E3003F',\n\t\t'#8E1E5F',\n\t\t'#FE2AC2',\n\t\t'#CCF030',\n\t\t'#9900EC',\n\t\t'#3A1AA8',\n\t\t'#3932FE',\n\t\t'#3276FF',\n\t\t'#35B9F6',\n\t\t'#42BC6A',\n\t\t'#91E0CB',\n\t],\n\tPlain: [\n\t\t'#B1EB68',\n\t\t'#B1B9B5',\n\t\t'#FFA16C',\n\t\t'#9B64E7',\n\t\t'#CEE113',\n\t\t'#2F9CFA',\n\t\t'#CA6877',\n\t\t'#EC3D8C',\n\t\t'#9CC66D',\n\t\t'#C73640',\n\t\t'#7D9532',\n\t\t'#B064DC',\n\t],\n\tAndroid: [\n\t\t'#33B5E5',\n\t\t'#AA66CC',\n\t\t'#99CC00',\n\t\t'#FFBB33',\n\t\t'#FF4444',\n\t\t'#0099CC',\n\t\t'#9933CC',\n\t\t'#669900',\n\t\t'#FF8800',\n\t\t'#CC0000',\n\t],\n\tSoft: [\n\t\t'#9ED8D2',\n\t\t'#FFD478',\n\t\t'#F16D9A',\n\t\t'#A8D59D',\n\t\t'#FDC180',\n\t\t'#F05133',\n\t\t'#EDED8A',\n\t\t'#F6A0A5',\n\t\t'#9F218B',\n\t],\n\tSimple: [\n\t\t'#FF8181',\n\t\t'#FFB081',\n\t\t'#FFE081',\n\t\t'#EFFF81',\n\t\t'#BFFF81',\n\t\t'#90FF81',\n\t\t'#81FFA2',\n\t\t'#81FFD1',\n\t\t'#9681FF',\n\t\t'#C281FF',\n\t\t'#FF81DD',\n\t],\n\tEgypt: [\n\t\t'#3A3E04',\n\t\t'#784818',\n\t\t'#FCFCA8',\n\t\t'#C03C0C',\n\t\t'#F0A830',\n\t\t'#A8783C',\n\t\t'#FCFCFC',\n\t\t'#FCE460',\n\t\t'#540C00',\n\t\t'#C0C084',\n\t\t'#3C303C',\n\t\t'#1EA34A',\n\t\t'#606C54',\n\t\t'#F06048',\n\t],\n\tOlive: [\n\t\t'#18240C',\n\t\t'#3C6C18',\n\t\t'#60A824',\n\t\t'#90D824',\n\t\t'#A8CC60',\n\t\t'#789C60',\n\t\t'#CCF030',\n\t\t'#B4CCA8',\n\t\t'#D8F078',\n\t\t'#40190D',\n\t\t'#E4F0CC',\n\t],\n\tCandid: [\n\t\t'#AF5E14',\n\t\t'#81400C',\n\t\t'#E5785D',\n\t\t'#FEBFBF',\n\t\t'#A66363',\n\t\t'#C7B752',\n\t\t'#EFF1A7',\n\t\t'#83ADB7',\n\t\t'#528F98',\n\t\t'#BCEDF5',\n\t\t'#446B3D',\n\t\t'#8BD96F',\n\t\t'#E4FFB9',\n\t],\n\tSulphide: [\n\t\t'#594440',\n\t\t'#0392A7',\n\t\t'#FFC343',\n\t\t'#E2492F',\n\t\t'#007257',\n\t\t'#B0BC4A',\n\t\t'#2E5493',\n\t\t'#7C2738',\n\t\t'#FF538B',\n\t\t'#A593A1',\n\t\t'#EBBA86',\n\t\t'#E2D9CA',\n\t],\n\tLint: [\n\t\t'#A8A878',\n\t\t'#F0D89C',\n\t\t'#60909C',\n\t\t'#242418',\n\t\t'#E49C30',\n\t\t'#54483C',\n\t\t'#306090',\n\t\t'#C06C00',\n\t\t'#C0C0C0',\n\t\t'#847854',\n\t\t'#6C3C00',\n\t\t'#9C3C3C',\n\t\t'#183C60',\n\t\t'#FCCC00',\n\t\t'#840000',\n\t\t'#FCFCFC',\n\t],\n};\n\nexport function hexToRgba(hex = '#ffffff', opacity = 1) {\n\t// Remove the '#' if it exists\n\thex = hex.replace(/^#/, '');\n\n\t// Parse r, g, b values\n\tlet r, g, b;\n\n\tif (hex.length === 3) {\n\t\t// If shorthand hex (#abc), expand to full (#aabbcc)\n\t\tr = parseInt(hex[0] + hex[0], 16);\n\t\tg = parseInt(hex[1] + hex[1], 16);\n\t\tb = parseInt(hex[2] + hex[2], 16);\n\t} else if (hex.length === 6) {\n\t\t// If full hex (#aabbcc)\n\t\tr = parseInt(hex.substring(0, 2), 16);\n\t\tg = parseInt(hex.substring(2, 4), 16);\n\t\tb = parseInt(hex.substring(4, 6), 16);\n\t} else {\n\t\tthrow new Error('Invalid HEX color.');\n\t}\n\n\t// Ensure opacity is between 0 and 1\n\topacity = Math.min(1, Math.max(0, opacity));\n\n\treturn `rgba(${r}, ${g}, ${b}, ${opacity})`;\n}\n\nexport function getChartLabels(rawData) {\n\t// Extract all unique labels dynamically.\n\treturn Array.from(\n\t\tnew Set(\n\t\t\tObject.values(rawData)\n\t\t\t\t.flat()\n\t\t\t\t.map((entry) => entry.name)\n\t\t)\n\t).sort(); // Sorting for consistency.\n}\n\nexport function getDataSets(rawData, labels, colorPalette, extraConfig) {\n\tconst legends = Object.keys(rawData);\n\n\treturn (\n\t\tlegends\n\t\t\t.map((legend, index) => {\n\t\t\t\tif (\n\t\t\t\t\t(extraConfig.chartType === 'Waterfall' ||\n\t\t\t\t\t\textraConfig.chartType === 'Pie' ||\n\t\t\t\t\t\textraConfig.chartType === 'PolarArea') &&\n\t\t\t\t\tlegend !== legends[0]\n\t\t\t\t) {\n\t\t\t\t\treturn null; // Skip non-first legends\n\t\t\t\t}\n\n\t\t\t\tlet data = labels.map(\n\t\t\t\t\t(xAxis) =>\n\t\t\t\t\t\trawData[legend].find((entry) => entry.name === xAxis)\n\t\t\t\t\t\t\t?.value || 0\n\t\t\t\t);\n\n\t\t\t\tlet cumulative = 0;\n\n\t\t\t\tconst ranges = data.map((v) => {\n\t\t\t\t\tconst start = cumulative;\n\t\t\t\t\tcumulative += v;\n\t\t\t\t\treturn [start, cumulative];\n\t\t\t\t});\n\n\t\t\t\tfunction toRanges(dataArr) {\n\t\t\t\t\tconst ranges = [];\n\t\t\t\t\tlet cumulative = 0;\n\t\t\t\t\tdataArr.forEach((value) => {\n\t\t\t\t\t\tconst start = cumulative;\n\t\t\t\t\t\tcumulative += value;\n\t\t\t\t\t\tranges.push([start, cumulative]);\n\t\t\t\t\t});\n\t\t\t\t\treturn ranges;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tlabel: legend,\n\t\t\t\t\tdata: extraConfig.chartType === 'Waterfall' ? ranges : data,\n\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\textraConfig.chartType === 'Pie' ||\n\t\t\t\t\t\textraConfig.chartType === 'PolarArea'\n\t\t\t\t\t\t\t? colorPalette\n\t\t\t\t\t\t\t: hexToRgba(\n\t\t\t\t\t\t\t\t\tcolorPalette[index % colorPalette.length],\n\t\t\t\t\t\t\t\t\textraConfig['opacity']\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\tborderColor:\n\t\t\t\t\t\textraConfig.chartType === 'Pie' ||\n\t\t\t\t\t\textraConfig.chartType === 'PolarArea'\n\t\t\t\t\t\t\t? colorPalette\n\t\t\t\t\t\t\t: colorPalette[index % colorPalette.length],\n\t\t\t\t\tfill: extraConfig.fill === true,\n\t\t\t\t\t// Apply semi-transparent fill if using an Area chart.\n\t\t\t\t\t...(extraConfig.chartType === 'Area'\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tbackgroundColor: hexToRgba(\n\t\t\t\t\t\t\t\t\tcolorPalette[index % colorPalette.length],\n\t\t\t\t\t\t\t\t\t0.5\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: {}),\n\n\t\t\t\t\t// Apply tension if requested.\n\t\t\t\t\t...(extraConfig.tension && { tension: 0.4 }),\n\t\t\t\t\t//...(extraConfig.chartType === 'StepUpBar' && { barPercentage: 1/legends.length }  ),\n\n\t\t\t\t\t...(extraConfig.stepped && {\n\t\t\t\t\t\tstepped: extraConfig.stepped,\n\t\t\t\t\t}), // For setp up bar chart.\n\t\t\t\t};\n\t\t\t})\n\t\t\t// Remove any null entries so Chart.js only receives valid datasets.\n\t\t\t.filter((dataset) => dataset !== null)\n\t);\n}\n","import { Chart, Scale } from 'chart.js/auto';\n\nclass SqrtScale extends Scale {\n\t// Set a unique ID.\n\tstatic id = 'sqrt';\n\n\tparse(raw) {\n\t\t// Use linear parsing—validate positive values if needed.\n\t\treturn Chart.LinearScale.prototype.parse.call(this, raw);\n\t}\n\n\tdetermineDataLimits() {\n\t\tconst { min, max } = this.getMinMax(true);\n\t\tthis.min = min >= 0 ? min : 0;\n\t\tthis.max = max;\n\t}\n\n\tbuildTicks() {\n\t\tconst ticks = [];\n\t\tconst min = Math.sqrt(this.min || 0);\n\t\tconst max = Math.sqrt(this.max || 1);\n\t\tconst step = (max - min) / 5; // customize step as needed.\n\t\tfor (let r = min; r <= max; r += step) {\n\t\t\tticks.push({ value: r * r });\n\t\t}\n\t\treturn ticks;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis._start = Math.sqrt(this.min);\n\t\tthis._range = Math.sqrt(this.max) - this._start;\n\t}\n\n\tgetPixelForValue(value) {\n\t\tconst v = Math.sqrt(value);\n\t\tconst ratio = (v - this._start) / this._range;\n\t\treturn this.getPixelForDecimal(ratio);\n\t}\n\n\tgetValueForPixel(pixel) {\n\t\tconst ratio = this.getDecimalForPixel(pixel);\n\t\tconst v = this._start + ratio * this._range;\n\t\treturn v * v;\n\t}\n}\n\nexport default SqrtScale;\n","import { Scale } from 'chart.js/auto';\n\nconst symlogTransform = (value) => {\n\treturn Math.sign(value) * Math.log10(Math.abs(value) / constant + 1);\n};\n\nconst symlogInverseTransform = (value) => {\n\treturn Math.sign(value) * (Math.pow(10, Math.abs(value)) - 1) * constant;\n};\n\nclass SymlogScale extends Scale {\n\tparse(raw, index) {\n\t\tconst value = super.parse(raw, index);\n\t\treturn symlogTransform(value);\n\t}\n\n\tdetermineDataLimits() {\n\t\tconst { min, max } = this.getMinMax(true);\n\t\tthis.min = symlogTransform(min);\n\t\tthis.max = symlogTransform(max);\n\t\tthis._startValue = this.min;\n\t\tthis._valueRange = this.max - this.min;\n\t}\n\n\tgetPixelForValue(value) {\n\t\tconst symlogValue = symlogTransform(value);\n\t\tconst decimal = (symlogValue - this._startValue) / this._valueRange;\n\t\treturn this.getPixelForDecimal(decimal);\n\t}\n\n\tgetLabelForValue(value) {\n\t\treturn symlogInverseTransform(value).toLocaleString();\n\t}\n\n\tgenerateTickLabels(ticks) {\n\t\tconst minimalDecimalPlaces = Math.max(\n\t\t\t0,\n\t\t\tMath.ceil(\n\t\t\t\t-Math.log10(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t...ticks.map((t) =>\n\t\t\t\t\t\t\tMath.abs(t.value - (ticks[0]?.value || 0))\n\t\t\t\t\t\t)\n\t\t\t\t\t) || 0\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tticks.forEach((tick) => {\n\t\t\ttick.label = parseFloat(\n\t\t\t\tsymlogInverseTransform(tick.value).toFixed(minimalDecimalPlaces)\n\t\t\t).toString();\n\t\t});\n\t}\n\n\tbuildTicks() {\n\t\tconst ticks = [];\n\t\tconst tickCount = 11;\n\t\tconst min = symlogInverseTransform(this.min);\n\t\tconst max = symlogInverseTransform(this.max);\n\t\tconst range = max - min;\n\t\tconst stepSize = range / (tickCount - 1);\n\n\t\tfor (let i = min; i <= max; i += stepSize) {\n\t\t\tticks.push({ value: i });\n\t\t}\n\t\treturn ticks;\n\t}\n}\n\nSymlogScale.id = 'symlog';\n\nexport default SymlogScale;\n","import { Chart, Scale } from 'chart.js/auto';\n\nclass PowScale extends Scale {\n\tstatic id = 'pow';\n\n\tconstructor(cfg) {\n\t\tsuper(cfg);\n\t\tthis._startValue = undefined;\n\t\tthis._valueRange = 0;\n\t\tthis.power = cfg.power || 2; // default exponent.\n\t}\n\n\tparse(raw, index) {\n\t\tconst val = Chart.LinearScale.prototype.parse.call(this, raw, index);\n\t\treturn isFinite(val) ? val : null;\n\t}\n\n\tdetermineDataLimits() {\n\t\tconst { min, max } = this.getMinMax(true);\n\t\tthis.min = isFinite(min) ? min : 0;\n\t\tthis.max = isFinite(max) ? max : 0;\n\t}\n\n\tbuildTicks() {\n\t\tconst ticks = [];\n\t\tconst start = Math.pow(this.min, 1 / this.power);\n\t\tconst end = Math.pow(this.max, 1 / this.power);\n\t\tconst step = (end - start) / 5;\n\n\t\tfor (let r = start; r <= end; r += step) {\n\t\t\tticks.push({ value: r ** this.power });\n\t\t}\n\t\tthis.min = ticks[0]?.value ?? this.min;\n\t\tthis.max = ticks[ticks.length - 1]?.value ?? this.max;\n\t\treturn ticks;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis._startValue = Math.pow(this.min, 1 / this.power);\n\t\tthis._valueRange =\n\t\t\tMath.pow(this.max, 1 / this.power) - this._startValue;\n\t}\n\n\tgetPixelForValue(value) {\n\t\tconst transformed = Math.pow(value, 1 / this.power);\n\t\tconst ratio = (transformed - this._startValue) / this._valueRange;\n\t\treturn this.getPixelForDecimal(ratio);\n\t}\n\n\tgetValueForPixel(pixel) {\n\t\tconst ratio = this.getDecimalForPixel(pixel);\n\t\tconst val = this._startValue + ratio * this._valueRange;\n\t\treturn val ** this.power;\n\t}\n}\n\nexport default PowScale;\n","const canvasBackgroundPlugin = {\n\tid: 'customCanvasBackgroundColor',\n\tbeforeDraw: (chart, args, options) => {\n\t\tconst { ctx } = chart;\n\t\tctx.save();\n\t\tctx.globalCompositeOperation = 'destination-over';\n\t\tctx.fillStyle = options.color ? options.color : '#ffffff';\n\t\tctx.fillRect(0, 0, chart.width, chart.height);\n\t\tctx.restore();\n\t},\n};\n\nexport default canvasBackgroundPlugin;\n","const plotAreaBackgroundPlugin = {\n\tid: 'customPlotAreaBackgroundColor',\n\tbeforeDraw: (chart, args, options) => {\n\t\tconst { ctx } = chart;\n\t\tconst chartArea = chart.chartArea; // Get the axis area\n\t\tctx.save();\n\t\t//ctx.globalCompositeOperation = 'destination-over';\n\t\t//ctx.fillStyle = options.color ? hexToRgba( options.color, options.opacity ) : '#ffffff';\n\t\t//ctx.fillRect(0, 0, chart.width, chart.height);\n\t\tctx.fillStyle = options.color ? options.color : '#ffffff'; // Background color.\n\t\tctx.fillRect(\n\t\t\tchartArea.left,\n\t\t\tchartArea.top,\n\t\t\tchartArea.right - chartArea.left,\n\t\t\tchartArea.bottom - chartArea.top\n\t\t);\n\n\t\tctx.restore();\n\t},\n};\n\nexport default plotAreaBackgroundPlugin;\n","const downloadChartImagePlugin = {\n\tid: 'downloadChartImagePlugin',\n\tafterDraw(chart, _args, options) {\n\t\tif (!options.enable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ctx, canvas } = chart;\n\t\tconst text = options.buttonText || 'Download Chart';\n\t\tconst padding = 10;\n\t\tconst fontSize = options.fontSize || 12;\n\n\t\tctx.save();\n\t\tctx.font = `${fontSize}px sans-serif`;\n\t\tctx.fillStyle = options.buttonColor || '#007bff';\n\t\tconst textWidth = ctx.measureText(text).width;\n\t\tconst x = canvas.width - textWidth - padding;\n\t\tconst y = canvas.height - padding;\n\n\t\tctx.fillText(text, x, y);\n\t\tctx.restore();\n\n\t\t// Canvas click listener\n\t\tcanvas.onclick = (e) => {\n\t\t\tconst rect = canvas.getBoundingClientRect();\n\t\t\tconst clickX = e.clientX - rect.left;\n\t\t\tconst clickY = e.clientY - rect.top;\n\t\t\tif (\n\t\t\t\tclickX >= x &&\n\t\t\t\tclickX <= x + textWidth &&\n\t\t\t\tclickY >= y - fontSize &&\n\t\t\t\tclickY <= y\n\t\t\t) {\n\t\t\t\tconst url = chart.toBase64Image();\n\t\t\t\tconst link = document.createElement('a');\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.download = options.filename || 'chart.png';\n\t\t\t\tlink.click();\n\t\t\t}\n\t\t};\n\t},\n};\n\nexport default downloadChartImagePlugin;\n","// phpcs:disable\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport ChartjsPluginStacked100 from 'chartjs-plugin-stacked100';\n\nimport {\n\tchartJSColorPalette,\n\thexToRgba,\n\tgetChartLabels,\n\tgetDataSets,\n} from './chart-js-adapter/helpers';\nimport SqrtScale from './chart-js-adapter/plugin-squrt-scale';\nimport SymlogScale from './chart-js-adapter/plugin-symlog-scale';\nimport PowScale from './chart-js-adapter/plugin-pow-scale';\nimport canvasBackgroundPlugin from './chart-js-adapter/plugin-canvas-background';\nimport plotAreaBackgroundPlugin from './chart-js-adapter/plugin-plot-area-background';\nimport downloadChartImagePlugin from './chart-js-adapter/plugin-download-chart-image';\nimport { isNumber } from 'chart.js/helpers';\n\nlet chartJS;\n\nfunction parseChartJSData(rawData, rawConfig, extraConfig) {\n\t// Extract all unique labels dynamically.\n\tconst labels = getChartLabels(rawData);\n\n\tconst colorPalette = chartJSColorPalette[rawConfig.graph.palette];\n\n\t// Generate datasets dynamically.\n\tconst datasets = getDataSets(rawData, labels, colorPalette, extraConfig);\n\n\tconst scaleGrid = {\n\t\ttickColor: rawConfig.axis.strokecolor,\n\t\tcolor: hexToRgba(rawConfig.axis.strokecolor, rawConfig.axis.opacity),\n\t};\n\tconst scaleTicksStyles = {\n\t\tmaxTicksLimit: rawConfig.axis.ticks, // Limits the number of x-axis ticks.\n\t\tpadding: rawConfig.axis.padding,\n\t\tdisplay: rawConfig.axis.showtext,\n\t\tcolor: rawConfig.label.strokecolor,\n\t\tfont: {\n\t\t\tsize: rawConfig.label.fontsize,\n\t\t\tfamily: rawConfig.label.fontfamily,\n\t\t\tweight: rawConfig.label.fontweight,\n\t\t},\n\t};\n\tconst scaleTitleFontStyles = {\n\t\tfont: {\n\t\t\tsize: rawConfig.axis.fontsize,\n\t\t\tfamily: rawConfig.axis.fontfamily,\n\t\t\tweight: rawConfig.axis.fontweight,\n\t\t},\n\t};\n\n\tconst options = {\n\t\tresponsive: true === rawConfig.graph.responsive,\n\t\t//maintainAspectRatio: true === rawConfig.graph.responsive,\n\t\tresizeDelay: 1000,\n\t\tindexAxis: 'Horizontal' === rawConfig.graph.orientation ? 'y' : 'x',\n\t\tcategoryPercentage: 1 - parseFloat(rawConfig.scale.ordinality),\n\t\tlayout: {\n\t\t\tpadding: {\n\t\t\t\ttop: rawConfig.margin.top,\n\t\t\t\tright: rawConfig.margin.right,\n\t\t\t\tbottom: rawConfig.margin.bottom,\n\t\t\t\tleft: rawConfig.margin.left,\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\ty: {\n\t\t\t\tbeginAtZero: true,\n\t\t\t\t//type: 'category',\n\t\t\t\t//type:  'log' == rawConfig.scale.type ? 'logarithmic' : rawConfig.scale.type,\n\t\t\t\t...(extraConfig.isStacked && {\n\t\t\t\t\tstacked: extraConfig.isStacked,\n\t\t\t\t}),\n\t\t\t\t...(extraConfig.stepped && { beginAtZero: true }), // For stepped up bar chart.\n\n\t\t\t\ttitle: {\n\t\t\t\t\tdisplay: !!rawConfig.meta.vlabel.length,\n\t\t\t\t\ttext: [rawConfig.meta.vlabel, rawConfig.meta.vsublabel], // Vertical caption.\n\t\t\t\t\tfont: {\n\t\t\t\t\t\tsize: rawConfig.axis.fontsize,\n\t\t\t\t\t\tfamily: rawConfig.axis.fontfamily,\n\t\t\t\t\t\tweight: rawConfig.axis.fontweight,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\t//stepSize: 10,\n\t\t\t\t\tautoSkip: false,\n\t\t\t\t\tmaxTicksLimit: rawConfig.axis.ticks,\n\t\t\t\t\tmajor: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t},\n\t\t\t\t\t...scaleTicksStyles,\n\t\t\t\t\t//stepSize: 30, // Adjusts tick intervals instead of major/minor\n\t\t\t\t\t/*callback: function(value, index, values) {\n\t\t\t\t\t\treturn index % 2 === 0 ? value : ''; // Show every alternate tick\n\t\t\t\t\t}*/\n\t\t\t\t},\n\t\t\t\tgrid: scaleGrid,\n\t\t\t},\n\t\t\tx: {\n\t\t\t\t...(extraConfig.isStacked && {\n\t\t\t\t\tstacked: extraConfig.isStacked,\n\t\t\t\t}),\n\t\t\t\tbeginAtZero: true,\n\t\t\t\t//offset: true,\n\t\t\t\t//stacked: true,\n\n\t\t\t\ttitle: {\n\t\t\t\t\tdisplay: !!rawConfig.meta.hlabel.length,\n\t\t\t\t\ttext: [rawConfig.meta.hlabel, rawConfig.meta.hsublabel], // Horizontal caption.\n\t\t\t\t\tfont: {\n\t\t\t\t\t\tsize: rawConfig.axis.fontsize,\n\t\t\t\t\t\tfamily: rawConfig.axis.fontfamily,\n\t\t\t\t\t\tweight: rawConfig.axis.fontweight,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\t//stepSize: 10,\n\t\t\t\t\tautoSkip: false,\n\t\t\t\t\tmaxTicksLimit: rawConfig.axis.ticks,\n\t\t\t\t\tmajor: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t},\n\t\t\t\t\tminor: {\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tcolor: '#888',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t...scaleTicksStyles,\n\t\t\t\t},\n\t\t\t\tgrid: scaleGrid,\n\t\t\t},\n\t\t},\n\n\t\tplugins: {\n\t\t\tcustomCanvasBackgroundColor: {\n\t\t\t\tcolor: hexToRgba(\n\t\t\t\t\trawConfig.frame.bgcolor,\n\t\t\t\t\trawConfig.graph.opacity\n\t\t\t\t),\n\t\t\t},\n\n\t\t\tcustomPlotAreaBackgroundColor: {\n\t\t\t\tcolor: hexToRgba(\n\t\t\t\t\trawConfig.graph.bgcolor,\n\t\t\t\t\trawConfig.graph.opacity\n\t\t\t\t),\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tdisplay: !!rawConfig.meta.caption.length,\n\t\t\t\ttext: rawConfig.meta.caption,\n\t\t\t\tfont: {\n\t\t\t\t\tfamily: rawConfig.caption.fontfamily,\n\t\t\t\t\tsize: rawConfig.caption.fontsize,\n\t\t\t\t\tweight: rawConfig.caption.weight,\n\t\t\t\t\tstyle: rawConfig.caption.style,\n\t\t\t\t},\n\t\t\t\tcolor: rawConfig.caption.strokecolor,\n\t\t\t},\n\t\t\tsubtitle: {\n\t\t\t\tdisplay: !!rawConfig.meta.subcaption.length,\n\t\t\t\ttext: rawConfig.meta.subcaption,\n\t\t\t\tfont: {\n\t\t\t\t\tfamily: rawConfig.subCaption.fontfamily,\n\t\t\t\t\tsize: rawConfig.subCaption.fontsize,\n\t\t\t\t\tweight: rawConfig.subCaption.weight,\n\t\t\t\t},\n\t\t\t\tcolor: rawConfig.subCaption.strokecolor,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tenabled: 1 === rawConfig.tooltip.show,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: (context) => {\n\t\t\t\t\t\tif (!rawConfig.label.precision) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst formattedNumber =\n\t\t\t\t\t\t\tcontext.raw % 1 === 0\n\t\t\t\t\t\t\t\t? context.raw\n\t\t\t\t\t\t\t\t: Number(context.raw).toFixed(\n\t\t\t\t\t\t\t\t\t\trawConfig.label.precision\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\treturn context.dataset.label + ' : ' + formattedNumber;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdatalabels: {\n\t\t\t\tdisplay: 1 === rawConfig.label.showlabel,\n\t\t\t\tanchor: 'end',\n\t\t\t\talign: 'end',\n\t\t\t\tcolor: rawConfig.label.strokecolor,\n\t\t\t\tfont: {\n\t\t\t\t\tfamily: rawConfig.label.fontfamily,\n\t\t\t\t\tsize: rawConfig.label.fontsize,\n\t\t\t\t},\n\t\t\t\tformatter: function (value, context) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tisNumber(value) &&\n\t\t\t\t\t\trawConfig.label.precision &&\n\t\t\t\t\t\tvalue % 1 !== 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tvalue = value.toFixed(rawConfig.label.precision);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\trawConfig.label.prefix + value + rawConfig.label.suffix\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tdisplay: 1 === rawConfig.legend.showlegends,\n\t\t\t\tposition: rawConfig.legend.position,\n\t\t\t\tlabels: {\n\t\t\t\t\tboxWidth: rawConfig.legend.symbolsize,\n\t\t\t\t\tfont: {\n\t\t\t\t\t\tfamily: rawConfig.legend.fontfamily,\n\t\t\t\t\t\tsize: rawConfig.legend.fontsize,\n\t\t\t\t\t\tweight: rawConfig.legend.fontweight,\n\t\t\t\t\t},\n\t\t\t\t\tcolor: rawConfig.legend.color, // label text color.\n\t\t\t\t},\n\t\t\t},\n\t\t\tstacked100: {\n\t\t\t\tenable:\n\t\t\t\t\t'PercentBar' === extraConfig.chartType ||\n\t\t\t\t\t'PercentArea' === extraConfig.chartType,\n\t\t\t},\n\n\t\t\tdownloadChartImagePlugin: {\n\t\t\t\tenable: 1 === rawConfig.meta.isDownloadable,\n\t\t\t\tbuttonText: rawConfig.meta.downloadLabel,\n\t\t\t\tbuttonColor: '#3932FE',\n\t\t\t\tfontSize: 14,\n\t\t\t\tfilename: 'my_chart.png',\n\t\t\t},\n\t\t},\n\t};\n\n\treturn { labels: labels, datasets: datasets, options: options };\n}\n\nexport default function chartJs(chartSelector, ec_chart_data) {\n\tlet chartType = ec_chart_data.chart_type;\n\tlet extraConfig = {};\n\tlet chartDataset = ec_chart_data.chart_data;\n\tlet chartConfiguration = ec_chart_data.chart_configuration;\n\n\textraConfig['opacity'] = chartConfiguration.graph.opacity\n\t\t? parseFloat(chartConfiguration.graph.opacity)\n\t\t: 1;\n\n\tswitch (ec_chart_data.chart_type) {\n\t\tcase 'Bar':\n\t\t\tchartType = 'bar';\n\t\t\tbreak;\n\t\tcase 'Waterfall':\n\t\t\tchartType = 'bar';\n\t\t\textraConfig['chartType'] = 'Waterfall';\n\t\t\textraConfig['isStacked'] = true;\n\t\t\tbreak;\n\t\tcase 'Pie':\n\t\t\tchartType = 'pie';\n\t\t\textraConfig['chartType'] = 'Pie';\n\t\t\tbreak;\n\t\tcase 'Donut':\n\t\t\tchartType = 'doughnut';\n\t\t\textraConfig['chartType'] = 'Pie'; // dataset is currently kept same as pie chart.\n\t\t\tbreak;\n\t\tcase 'StepUpBar':\n\t\t\tchartType = 'bar';\n\t\t\textraConfig['chartType'] = 'StepUpBar';\n\t\t\textraConfig['isStacked'] = true;\n\t\t\tbreak;\n\t\tcase 'StackedBar':\n\t\t\tchartType = 'bar';\n\t\t\textraConfig['isStacked'] = true;\n\t\t\tbreak;\n\t\tcase 'PercentBar':\n\t\t\tchartType = 'bar';\n\t\t\textraConfig['chartType'] = 'PercentBar';\n\t\t\tbreak;\n\t\tcase 'Area':\n\t\t\tchartType = 'line';\n\t\t\textraConfig['chartType'] = 'Area';\n\t\t\textraConfig['fill'] = true;\n\t\t\textraConfig['tension'] = 0.4;\n\t\t\tbreak;\n\t\tcase 'PolarArea':\n\t\t\tchartType = 'polarArea';\n\t\t\textraConfig['chartType'] = 'PolarArea';\n\t\t\textraConfig['fill'] = true;\n\t\t\textraConfig['tension'] = 0.4;\n\t\t\tbreak;\n\t\tcase 'PercentArea':\n\t\t\tchartType = 'line';\n\t\t\textraConfig['chartType'] = 'PercentArea';\n\t\t\textraConfig['fill'] = true;\n\t\t\textraConfig['isStacked'] = true;\n\t\t\tbreak;\n\t\tcase 'Line':\n\t\t\tchartType = 'line';\n\t\t\textraConfig['chartType'] = 'Line';\n\t\t\t//extraConfig['tension'] = 0.4;\n\t\t\tbreak;\n\t\tcase 'StackedArea':\n\t\t\tchartType = 'line';\n\t\t\textraConfig['chartType'] = 'StackedArea';\n\t\t\textraConfig['fill'] = true;\n\t\t\textraConfig['isStacked'] = true;\n\t\t\textraConfig['tension'] = 0.4;\n\t\t\tbreak;\n\t}\n\n\tlet chartJSData = parseChartJSData(\n\t\tchartDataset,\n\t\tchartConfiguration,\n\t\textraConfig\n\t);\n\n\t// Register the custom scales plugins.\n\tChart.register(SqrtScale);\n\tChart.register(PowScale);\n\tChart.register(SymlogScale);\n\n\t// Register custom background color plugins.\n\tChart.register(canvasBackgroundPlugin);\n\tChart.register(plotAreaBackgroundPlugin);\n\n\tChart.register(downloadChartImagePlugin);\n\n\t// Register custom chart plugins.\n\t//Chart.register(stepUpBar);\n\n\t// Register ChartDataLabels plugin.\n\tChart.register(ChartDataLabels);\n\tChart.register(ChartjsPluginStacked100);\n\n\t// Change default options for ALL charts.\n\tChart.defaults.set('plugins.datalabels', { anchor: 'center' });\n\tChart.defaults.elements.bar.borderWidth = 2;\n\tChart.defaults.elements.point.radius = 5;\n\tChart.defaults.elements.point.hoverRadius = 8;\n\n\tChart.defaults.elements.line.cubicInterpolationMode = 'monotone';\n\n\tchartJS = new Chart(document.querySelector(chartSelector), {\n\t\ttype: chartType,\n\t\tdata: {\n\t\t\tlabels: chartJSData.labels,\n\t\t\tdatasets: chartJSData.datasets,\n\t\t},\n\t\toptions: chartJSData.options,\n\t\tplugins: chartJSData.plugins,\n\t});\n\n\tif (true != ec_chart_data.chart_configuration.graph.responsive) {\n\t\tchartJS.resize(\n\t\t\tec_chart_data.chart_configuration.dimension.width,\n\t\t\tec_chart_data.chart_configuration.dimension.height\n\t\t);\n\t}\n\n\t// Responsive resize handler (debounced).\n\tlet resizeTimeout;\n\twindow.addEventListener('resize', () => {\n\t\tclearTimeout(resizeTimeout);\n\t\tresizeTimeout = setTimeout(() => {\n\t\t\tchartJS.resize();\n\t\t}, 2500);\n\t});\n\n\treturn chartJS;\n}\n","import '../scss/easy-charts-public.scss';\nimport chartJs from './chart-js-adapter';\n\nconst canvases = document.querySelectorAll('.ec-chartjs-chart-container');\n\ncanvases.forEach((canvas, index) => {\n\tconst dataObject = canvas.dataset.object;\n\tconst ec_chart_data = window[dataObject];\n\n\ttry {\n\t\tchartJs(\n\t\t\t'canvas.ec-chartjs-chart-container.' + dataObject,\n\t\t\tec_chart_data\n\t\t);\n\t} catch (err) {\n\t\tconsole.error('Failed to load module', err);\n\t}\n});\n"],"names":["n","self","t","d","a","r","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","Symbol","toStringTag","value","default","g","e","concat","i","Math","pow","round","c","floor","u","ceil","f","assign","arguments","length","apply","this","s","findIndex","p","xAxisID","yAxisID","v","y","b","labels","datasets","stack","Array","slice","l","map","filter","reduce","parsing","data","find","abs","max","values","keys","forEach","h","options","indexAxis","stacked","scales","id","beforeInit","enable","replaceTooltipLabel","fixNegativeScale","individual","min","some","axisId","plugins","tooltip","callbacks","label","chart","datasetIndex","dataIndex","originalData","calculatedData","beforeUpdate","getDatasetMeta","hidden","precision","roundOption","afterUpdate","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","key","obj","prop","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","index","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","range","roundedRange","niceRange","fraction","isNumber","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","responsive","scale","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","found","isStacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","yid","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","ArcElement","selfJoin","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","measureLabelSize","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","screen","deviceXDPI","logicalXDPI","utils","orient","origin","x0","y0","dy","ln","region","compute$1","anchor","clamp","r0","r1","clipped","vx","vy","aligned","rx","ry","sx","sy","rasterize","getScaleOrigin","drawTextLine","shadow","shadowBlur","stroked","filled","Label","me","_index","_model","_rects","_el","_modelize","positioner","textShadowBlur","textShadowColor","model","th","tw","tx","ty","frame","geometry","bgColor","drawRoundedRect","drawFrame","textGeometry","shadowColor","drawText","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","HitBox","_rotation","_rect","coordinates","vs","intersects","pr0","pr1","axes","prepare","$layout","_box","_hidable","_visible","_set","sa","sb","state","dirty","collider","s0","s1","collide","h0","compute","lookup","DEFAULT_KEY","dispatchEvent","callback$1","groups","$groups","_key","_dirty","_actives","expando","_listened","_datasets","_labels","afterDatasetUpdate","datalabels","configs","afterDatasetsDraw","beforeEvent","enter","leave","_hovered","dispatchMoveEvents","handleMoveEvents","handlers","click","handleClickEvents","updates","chartJSColorPalette","Default","OldDefault","Plain","Android","Soft","Simple","Egypt","Olive","Candid","Sulphide","Lint","hexToRgba","substring","symlogTransform","constant","symlogInverseTransform","SymlogScale","toLocaleString","minimalDecimalPlaces","toFixed","power","globalCompositeOperation","buttonText","buttonColor","onclick","clickX","clickY","url","link","createElement","href","download","filename","chartJS","querySelectorAll","dataObject","ec_chart_data","chartSelector","chartType","chart_type","extraConfig","chartDataset","chart_data","chartConfiguration","chart_configuration","graph","resizeTimeout","chartJSData","rawData","rawConfig","flat","getChartLabels","colorPalette","legends","cumulative","ranges","getDataSets","palette","scaleGrid","strokecolor","scaleTicksStyles","showtext","fontsize","fontfamily","fontweight","orientation","ordinality","vlabel","vsublabel","hlabel","hsublabel","customCanvasBackgroundColor","bgcolor","customPlotAreaBackgroundColor","caption","subtitle","subcaption","subCaption","formattedNumber","showlabel","showlegends","symbolsize","stacked100","downloadChartImagePlugin","isDownloadable","downloadLabel","parseChartJSData","querySelector","chartJs","err"],"sourceRoot":""}
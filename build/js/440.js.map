{"version":3,"file":"js/440.js","mappings":"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","sources":["webpack://easy-charts/./node_modules/chart.js/dist/chart.js","webpack://easy-charts/./node_modules/chart.js/auto/auto.js","webpack://easy-charts/./node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","webpack://easy-charts/./node_modules/@kurkle/color/dist/color.esm.js","webpack://easy-charts/./node_modules/chart.js/dist/chunks/helpers.dataset.js"],"sourcesContent":["/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","indexOf","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","newTicks","majorStart","majorEnd","ceil","round","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","len","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","selfJoin","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","outerAngleClip","innerAngleClip","clipWidth","rect","clipSelf","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","logarithmic","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","measureLabelSize","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","screen","deviceXDPI","logicalXDPI","utils","orient","origin","x0","y0","dy","ln","region","compute$1","anchor","clamp","r0","r1","clipped","vx","vy","aligned","rx","ry","sx","sy","rasterize","getScaleOrigin","drawTextLine","shadow","shadowBlur","stroked","strokeText","filled","Label","me","_index","_model","_rects","_el","_modelize","positioner","textShadowBlur","textShadowColor","model","inputs","isArray","th","tw","tx","ty","frame","geometry","bgColor","HALF_PI","drawRoundedRect","drawFrame","textGeometry","shadowColor","drawText","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","p0","HitBox","_rotation","_rect","coordinates","vs","intersects","pr0","pr1","axes","prepare","$layout","_box","_hidable","_visible","_set","sa","sb","state","dirty","Proxy","collider","s0","s1","collide","h0","h1","compute","lookup","DEFAULT_KEY","dispatchEvent","callback$1","groups","$groups","_key","_dirty","family","klen","beforeInit","_actives","expando","_listened","_datasets","_labels","afterDatasetUpdate","datalabels","configs","merger","afterDatasetsDraw","beforeEvent","enter","leave","_hovered","dispatchMoveEvents","handleMoveEvents","handlers","click","handleClickEvents","updates","a0","a1","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h2","eq","HUE_RE","hsl2rgbn","n","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","g","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","S","R","Q","O","N","M","L","K","G","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","RGB_RE","modHSL","tmp","clone","fromObject","functionParse","exec","rgbParse","hwb2rgb","hsv2rgb","hueParse","Color","unpacked","tkeys","ok","nk","parseInt","unpack","nameParse","_rgb","_valid","rgbString","isShort","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","toDimension","thisArg","each","loopable","_elementsEqual","isValidKey","_merger","tval","sval","merge","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","resolveObjectKey","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","niceNum","roundedRange","niceRange","fraction","_factorize","isNumber","Symbol","toPrimitive","isNonPrimitive","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","cmp","mid","_lookupByKey","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","object","unlistenArrayEvents","stub","_arrayUnique","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","timeout","clearTimeout","setTimeout","_toLeftRightCenter","_alignStartEnd","_textX","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","formatNumber","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","Ticks","getScope$1","root","Defaults","_appliers","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","_measureText","longest","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","renderText","setRenderOpts","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","toFontString","resolve","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_createResolver","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_scopes","_rootScopes","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","_updateBezierControlPoints","controlPoints","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","splineCurveMonotone","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getRelativePosition","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","getPropertyValue","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","sub","_computeSegments","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer","getSizeForArea","field","getDatasetClipArea","getDatasetArea"],"sourceRoot":""}